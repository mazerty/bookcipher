#!/usr/bin/python3 -u

import argparse
import collections
import os
import random


def medium(args):
    ref = []

    with open(args.ref, "rb") as f:
        b = f.read(1)
        while b:
            ref.append(b)
            b = f.read(1)

    output = []

    with open(args.input, "r") as f:
        input = f.read().splitlines()

    for line in input:
        output.append(ref[int(line)])

    with open(args.output, "wb") as f:
        for b in output:
            f.write(b)


def hard(args):
    ref = collections.defaultdict(list)

    with open(args.ref, "rb") as f:
        b = f.read(1)
        i = 0
        while b:
            ref[b].append(i)
            i = i + 1
            b = f.read(1)

    if len(ref) < 256:
        raise Exception

    output = []

    with open(args.input, "rb") as f:
        b = f.read(1)
        while b:
            output.append(ref[b][random.randrange(len(ref[b]))])
            b = f.read(1)

    with open(args.output, "w") as f:
        for item in output:
            f.write(str(item) + os.linesep)


if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    subparsers = parser.add_subparsers()

    parser_medium = subparsers.add_parser("medium")
    parser_medium.add_argument("ref", nargs="?")
    parser_medium.add_argument("input", nargs="?")
    parser_medium.add_argument("output", nargs="?")
    parser_medium.set_defaults(func=medium)

    parser_hard = subparsers.add_parser("hard")
    parser_hard.add_argument("ref", nargs="?")
    parser_hard.add_argument("input", nargs="?")
    parser_hard.add_argument("output", nargs="?")
    parser_hard.set_defaults(func=hard)

    args = parser.parse_args()
    args.func(args)
